{{ if .Values.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-{{ .Values.cluster }}
  namespace: pathfinder
  labels: 
    apps: {{ .Chart.Name }}-{{ .Values.cluster }}
    release: {{ .Chart.Name }}-{{ .Values.cluster }}
spec:
  selector: 
    matchLabels:
      app: {{ .Chart.Name }}-{{ .Values.cluster }}
  replicas: 1
  template:
    metadata:
      name: {{ .Chart.Name }}-{{ .Values.cluster }}
      labels:
        app: {{ .Chart.Name }}-{{ .Values.cluster }}
      annotations:
        valuesChecksum: {{ .Values | toYaml | sha256sum | trunc 63 }}
    spec:
      imagePullSecrets:
      - name: artifactory-credentials
      
      initContainers: 
      - name: appsettings-compression
        image: silvester.jfrog.io/silvester-docker/file-compression:0.0.3
        volumeMounts:
        - name: appsettings-input-volume
          mountPath: "/mnt/input"
        - name: appsettings-br-output-volume
          mountPath: "/mnt/output/br"
        - name: appsettings-gz-output-volume
          mountPath: "/mnt/output/gz"
        command: ["sh", "-c", "brotli -k -v -f -o /mnt/output/br/appsettings.json.br /mnt/input/appsettings.json && gzip -k -v -f -c /mnt/input/appsettings.json > /mnt/output/gz/appsettings.json.gz"]

      containers:
      - name: {{ .Chart.Name }}-{{ .Values.cluster }}
        image: silvester.jfrog.io/silvester-docker/pathfinder-reference-web:{{ .Values.version }}
        imagePullPolicy: IfNotPresent

        {{ if .Values.deployment.probes.liveness.enabled }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.deployment.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.liveness.timeoutSeconds }}
          successThreshold: {{ .Values.deployment.probes.liveness.successThreshold }}
          failureThreshold: {{ .Values.deployment.probes.liveness.failureThreshold }}
          httpGet: 
            path: /probes/liveness
            port: 80
        {{- end }}
        
        {{ if .Values.deployment.probes.readiness.enabled }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.deployment.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.readiness.timeoutSeconds }}
          successThreshold: {{ .Values.deployment.probes.readiness.successThreshold }}
          failureThreshold: {{ .Values.deployment.probes.readiness.failureThreshold }}
          httpGet: 
            path: /probes/readiness
            port: 80
        {{- end }}
        
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
          
        resources:
          requests:
            memory: 256Mi
            cpu: 0.5m
          limits:
            memory: 256Mi
            cpu: 1

        volumeMounts:
        {{- if .Values.deployment.appsettings }}
        - name: appsettings-input-volume
          mountPath: "/usr/share/nginx/html/appsettings.json"
          subPath: appsettings.json
        - name: appsettings-br-output-volume
          mountPath: "/usr/share/nginx/html/appsettings.json.br"
          subPath: appsettings.json.br
        - name: appsettings-gz-output-volume
          mountPath: "/usr/share/nginx/html/appsettings.json.gz"
          subPath: appsettings.json.gz
        {{- end }}        
      volumes: 
      {{ if .Values.deployment.appsettings }}
      - name: appsettings-input-volume
        configMap:
          name: {{ .Chart.Name }}-configmap-appsettings-{{ .Values.cluster }}
          defaultMode: 0777
      - name: appsettings-output-volume
        emptyDir: {}
      - name: appsettings-br-output-volume
        emptyDir: {}
      - name: appsettings-gz-output-volume
        emptyDir: {}
      {{ end }}
{{ end }}    
    